{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smudg\\\\Documents\\\\GitHub\\\\AidanMackey.net\\\\OLD\\\\src\\\\Components\\\\Shape.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber'; // CSS\n\nimport '../CSS/Sphere.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sphere(props) {\n  _s();\n\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef(); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.y += 0.00075);\n  useFrame((state, delta) => ref.current.rotation.z -= 0);\n  useFrame((state, delta) => ref.current.rotation.z -= Math.PI / 7000); // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: props.position,\n    ref: ref,\n    rotation: [0, 0, Math.PI / 6],\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [3.5, 12, 12]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: props.color,\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sphere, \"aVxcCejJRm6Lcgs4XOwoYLbF1L4=\", false, function () {\n  return [useFrame, useFrame, useFrame];\n});\n\n_c = Sphere;\n\nfunction Cube(props) {\n  _s2();\n\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef(); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.y += 0.00075);\n  useFrame((state, delta) => ref.current.rotation.z -= 0);\n  useFrame((state, delta) => ref.current.rotation.z -= Math.PI / 7000); // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: props.position,\n    ref: ref,\n    rotation: [0, 0, Math.PI / 6],\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [4, 4, 4, 2, 2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: props.color,\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(Cube, \"aVxcCejJRm6Lcgs4XOwoYLbF1L4=\", false, function () {\n  return [useFrame, useFrame, useFrame];\n});\n\n_c2 = Cube;\n\nfunction Cone(props) {\n  _s3();\n\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef(); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.y += 0.00075);\n  useFrame((state, delta) => ref.current.rotation.z -= 0);\n  useFrame((state, delta) => ref.current.rotation.z -= Math.PI / 7000); // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: props.position,\n    ref: ref,\n    rotation: [0, 0, Math.PI / 6],\n    children: [/*#__PURE__*/_jsxDEV(\"coneGeometry\", {\n      args: [3, 3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: props.color,\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(Cone, \"aVxcCejJRm6Lcgs4XOwoYLbF1L4=\", false, function () {\n  return [useFrame, useFrame, useFrame];\n});\n\n_c3 = Cone;\n\nfunction Plane(props) {\n  _s4();\n\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef(); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.z -= 0.00075 / 2); // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: props.position,\n    ref: ref,\n    rotation: [Math.PI / -2, 0, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [9, 9, 4, 4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: props.color,\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n\n_s4(Plane, \"8QVLrcMdYxPUkj6ry5zpyt6J6X8=\", false, function () {\n  return [useFrame];\n});\n\n_c4 = Plane;\n\nfunction FlyingSphere(props) {\n  _s5();\n\n  useEffect(() => {\n    var canvas = document.getElementById(\"canvasID\");\n    canvas.style.minHeight = \"80vh\";\n    canvas.style.height = \"max-content\";\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    id: \"canvasID\",\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), props.shape == \"sphere\" ? /*#__PURE__*/_jsxDEV(Sphere, {\n      position: [0, 0.75, -2],\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), props.shape == \"cube\" ? /*#__PURE__*/_jsxDEV(Cube, {\n      position: [0, 0.75, -2],\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), props.shape == \"cone\" ? /*#__PURE__*/_jsxDEV(Cone, {\n      position: [0, 0.75, -2],\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Plane, {\n      position: [0, -2.75, -2],\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(FlyingSphere, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c5 = FlyingSphere;\nexport default FlyingSphere;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Sphere\");\n$RefreshReg$(_c2, \"Cube\");\n$RefreshReg$(_c3, \"Cone\");\n$RefreshReg$(_c4, \"Plane\");\n$RefreshReg$(_c5, \"FlyingSphere\");","map":{"version":3,"sources":["C:/Users/Smudg/Documents/GitHub/AidanMackey.net/OLD/src/Components/Shape.js"],"names":["React","useRef","useEffect","Canvas","useFrame","Sphere","props","ref","state","delta","current","rotation","y","z","Math","PI","position","color","Cube","Cone","Plane","FlyingSphere","canvas","document","getElementById","style","minHeight","height","shape"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAkC,oBAAlC,C,CAEA;;AACA,OAAO,mBAAP;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB;AACA,QAAMC,GAAG,GAAGN,MAAM,EAAlB,CAFmB,CAGnB;;AACFG,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,OAA9C,CAAR;AACAR,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,CAA9C,CAAR;AACAT,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0BC,IAAI,CAACC,EAAL,GAAU,IAAxD,CAAR,CANqB,CAQnB;;AACA,sBACI;AACI,IAAA,QAAQ,EAAGT,KAAK,CAACU,QADrB;AAEI,IAAA,GAAG,EAAET,GAFT;AAGI,IAAA,QAAQ,EAAG,CAAC,CAAD,EAAI,CAAJ,EAAQO,IAAI,CAACC,EAAL,GAAU,CAAlB,CAHf;AAAA,4BAMA;AAAgB,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV;AAAtB;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAsB,MAAA,KAAK,EAAET,KAAK,CAACW,KAAnC;AAA0C,MAAA,SAAS;AAAnD;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GApBQZ,M;UAIPD,Q,EACAA,Q,EACAA,Q;;;KANOC,M;;AAsBT,SAASa,IAAT,CAAcZ,KAAd,EAAqB;AAAA;;AACnB;AACA,QAAMC,GAAG,GAAGN,MAAM,EAAlB,CAFmB,CAGnB;;AACFG,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,OAA9C,CAAR;AACAR,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,CAA9C,CAAR;AACAT,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0BC,IAAI,CAACC,EAAL,GAAU,IAAxD,CAAR,CANqB,CAQnB;;AACA,sBACI;AACI,IAAA,QAAQ,EAAGT,KAAK,CAACU,QADrB;AAEI,IAAA,GAAG,EAAET,GAFT;AAGI,IAAA,QAAQ,EAAG,CAAC,CAAD,EAAI,CAAJ,EAAQO,IAAI,CAACC,EAAL,GAAU,CAAlB,CAHf;AAAA,4BAMA;AAAa,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAsB,MAAA,KAAK,EAAET,KAAK,CAACW,KAAnC;AAA0C,MAAA,SAAS;AAAnD;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWD;;IApBQC,I;UAITd,Q,EACAA,Q,EACAA,Q;;;MANSc,I;;AAsBT,SAASC,IAAT,CAAcb,KAAd,EAAqB;AAAA;;AACnB;AACA,QAAMC,GAAG,GAAGN,MAAM,EAAlB,CAFmB,CAGnB;;AACFG,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,OAA9C,CAAR;AACAR,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,CAA9C,CAAR;AACAT,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0BC,IAAI,CAACC,EAAL,GAAU,IAAxD,CAAR,CANqB,CAQnB;;AACA,sBACI;AACI,IAAA,QAAQ,EAAGT,KAAK,CAACU,QADrB;AAEI,IAAA,GAAG,EAAET,GAFT;AAGI,IAAA,QAAQ,EAAG,CAAC,CAAD,EAAI,CAAJ,EAAQO,IAAI,CAACC,EAAL,GAAU,CAAlB,CAHf;AAAA,4BAMA;AAAc,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAApB;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAsB,MAAA,KAAK,EAAET,KAAK,CAACW,KAAnC;AAA0C,MAAA,SAAS;AAAnD;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWD;;IApBQE,I;UAITf,Q,EACAA,Q,EACAA,Q;;;MANSe,I;;AAsBT,SAASC,KAAT,CAAed,KAAf,EAAsB;AAAA;;AAClB;AACA,QAAMC,GAAG,GAAGN,MAAM,EAAlB,CAFkB,CAGlB;;AACAG,EAAAA,QAAQ,CAAC,CAACI,KAAD,EAAQC,KAAR,KAAmBF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,IAA0B,UAAQ,CAAtD,CAAR,CAJkB,CAKlB;;AACA,sBACE;AACM,IAAA,QAAQ,EAAEP,KAAK,CAACU,QADtB;AAEM,IAAA,GAAG,EAAET,GAFX;AAGM,IAAA,QAAQ,EAAG,CAACO,IAAI,CAACC,EAAL,GAAU,CAAC,CAAZ,EAAe,CAAf,EAAmB,CAAnB,CAHjB;AAAA,4BAKE;AAAe,MAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAM,CAAN,EAAQ,CAAR;AAArB;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAsB,MAAA,KAAK,EAAET,KAAK,CAACW,KAAnC;AAA0C,MAAA,SAAS;AAAnD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IAhBMG,K;UAILhB,Q;;;MAJKgB,K;;AAkBT,SAASC,YAAT,CAAsBf,KAAtB,EAA6B;AAAA;;AACzBJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAb;AAEAF,IAAAA,MAAM,CAACG,KAAP,CAAaC,SAAb,GAAyB,MAAzB;AACAJ,IAAAA,MAAM,CAACG,KAAP,CAAaE,MAAb,GAAsB,aAAtB;AACH,GALQ,CAAT;AAOF,sBACE,QAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAY,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,EAIIrB,KAAK,CAACsB,KAAN,IAAe,QAAf,gBACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAX,CAAlB;AAAiC,MAAA,KAAK,EAAEtB,KAAK,CAACW;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,qCAPN,EAWIX,KAAK,CAACsB,KAAN,IAAe,MAAf,gBACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAX,CAAhB;AAA+B,MAAA,KAAK,EAAGtB,KAAK,CAACW;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,qCAdN,EAkBIX,KAAK,CAACsB,KAAN,IAAe,MAAf,gBACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAX,CAAhB;AAA+B,MAAA,KAAK,EAAGtB,KAAK,CAACW;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,qCArBN,eAwBI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,IAAL,EAAW,CAAC,CAAZ,CAAjB;AAAiC,MAAA,KAAK,EAAGX,KAAK,CAACW;AAA/C;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;IApCQI,Y;;MAAAA,Y;AAsCT,eAAeA,YAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport { Canvas, useFrame, } from '@react-three/fiber'\r\n\r\n// CSS\r\nimport '../CSS/Sphere.css'\r\n\r\nfunction Sphere(props) {\r\n    // This reference gives us direct access to the THREE.Mesh object\r\n    const ref = useRef()\r\n    // Subscribe this component to the render-loop, rotate the mesh every frame\r\n  useFrame((state, delta) => (ref.current.rotation.y += 0.00075))\r\n  useFrame((state, delta) => (ref.current.rotation.z -= 0))\r\n  useFrame((state, delta) => (ref.current.rotation.z -= Math.PI / 7000))\r\n\r\n    // Return the view, these are regular Threejs elements expressed in JSX\r\n    return (\r\n        <mesh\r\n            position={ props.position }\r\n            ref={ref}\r\n            rotation={ [0, 0 , Math.PI / 6]}\r\n\r\n        >\r\n        <sphereGeometry args={[3.5, 12, 12]} />\r\n        <meshStandardMaterial color={props.color} wireframe />\r\n      </mesh>\r\n    )\r\n}\r\n\r\nfunction Cube(props) {\r\n  // This reference gives us direct access to the THREE.Mesh object\r\n  const ref = useRef()\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\nuseFrame((state, delta) => (ref.current.rotation.y += 0.00075))\r\nuseFrame((state, delta) => (ref.current.rotation.z -= 0))\r\nuseFrame((state, delta) => (ref.current.rotation.z -= Math.PI / 7000))\r\n\r\n  // Return the view, these are regular Threejs elements expressed in JSX\r\n  return (\r\n      <mesh\r\n          position={ props.position }\r\n          ref={ref}\r\n          rotation={ [0, 0 , Math.PI / 6]}\r\n\r\n      >\r\n      <boxGeometry args={[4, 4, 4, 2, 2 ]} />\r\n      <meshStandardMaterial color={props.color} wireframe />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nfunction Cone(props) {\r\n  // This reference gives us direct access to the THREE.Mesh object\r\n  const ref = useRef()\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\nuseFrame((state, delta) => (ref.current.rotation.y += 0.00075))\r\nuseFrame((state, delta) => (ref.current.rotation.z -= 0))\r\nuseFrame((state, delta) => (ref.current.rotation.z -= Math.PI / 7000))\r\n\r\n  // Return the view, these are regular Threejs elements expressed in JSX\r\n  return (\r\n      <mesh\r\n          position={ props.position }\r\n          ref={ref}\r\n          rotation={ [0, 0 , Math.PI / 6]}\r\n\r\n      >\r\n      <coneGeometry args={[3, 3]} />\r\n      <meshStandardMaterial color={props.color} wireframe />\r\n    </mesh>\r\n  )\r\n}\r\n  \r\nfunction Plane(props) {\r\n    // This reference gives us direct access to the THREE.Mesh object\r\n    const ref = useRef()\r\n    // Subscribe this component to the render-loop, rotate the mesh every frame\r\n    useFrame((state, delta) => (ref.current.rotation.z -= 0.00075/2))\r\n    // Return the view, these are regular Threejs elements expressed in JSX\r\n    return (\r\n      <mesh\r\n            position={props.position}\r\n            ref={ref}\r\n            rotation={ [Math.PI / -2, 0 , 0]}\r\n        >\r\n        <planeGeometry args={[9,9, 4,4]} />\r\n        <meshStandardMaterial color={props.color} wireframe/>\r\n      </mesh>\r\n    )\r\n  }\r\n\r\nfunction FlyingSphere(props) {\r\n    useEffect(() => {\r\n        var canvas = document.getElementById(\"canvasID\");\r\n\r\n        canvas.style.minHeight = \"80vh\";\r\n        canvas.style.height = \"max-content\";\r\n    })\r\n    \r\n  return (\r\n    <Canvas id=\"canvasID\">\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      {\r\n        props.shape == \"sphere\" ?\r\n          <Sphere position={[0, 0.75, -2]} color={props.color} />\r\n          : \r\n          <></>\r\n      }\r\n\r\n      {\r\n        props.shape == \"cube\" ?\r\n          <Cube position={[0, 0.75, -2]} color={ props.color}/>\r\n          : \r\n          <></>\r\n      }\r\n\r\n{\r\n        props.shape == \"cone\" ?\r\n          <Cone position={[0, 0.75, -2]} color={ props.color}/>\r\n          : \r\n          <></>\r\n      }\r\n        \r\n        <Plane position={[0, -2.75, -2]} color={ props.color}/>\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default FlyingSphere;\r\n"]},"metadata":{},"sourceType":"module"}